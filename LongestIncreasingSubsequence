#Longest Increasing Subsequence
class Solution(object):
    def lengthOfLIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0

        n = len(nums)
        # Initialize dp array where each element starts with a subsequence of length 1
        dp = [1] * n
        
        # Update the dp array by comparing each pair of elements
        for i in range(1, n):
            for j in range(i):
                if nums[i] > nums[j]:
                    dp[i] = max(dp[i], dp[j] + 1)

        # Return the maximum value in dp, which represents the longest subsequence
        return max(dp)
